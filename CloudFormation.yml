AWSTemplateFormatVersion: "2010-09-09"
Description: EC2 Instances + ALB with Target Group (fixed version)

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH ключ для подключения
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Первая подсеть
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Вторая подсеть

Resources:

  WebSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow HTTP and SSH
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  Instance1:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-0c02fb55956c7d316
      SubnetId: !Ref Subnet1
      SecurityGroupIds: [!Ref WebSecurityGroup]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          echo "Привет с Instance-1" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd

  Instance2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      ImageId: ami-0c02fb55956c7d316
      SubnetId: !Ref Subnet2
      SecurityGroupIds: [!Ref WebSecurityGroup]
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          echo "Привет с Instance-2" > /var/www/html/index.html
          systemctl start httpd
          systemctl enable httpd

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: WebTargetGroup
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VPC
      HealthCheckPath: /
      TargetType: instance
      Targets:
        - Id: !Ref Instance1
        - Id: !Ref Instance2

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: WebALB
      Subnets:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroups:
        - !Ref WebSecurityGroup
      Scheme: internet-facing
      Type: application

  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

Outputs:
  LoadBalancerDNS:
    Description: DNS Load Balancer
    Value: !GetAtt LoadBalancer.DNSName
